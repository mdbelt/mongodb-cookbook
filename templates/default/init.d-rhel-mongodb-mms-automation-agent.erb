#!/bin/bash

#
# (C) Copyright 2013, 2014, MongoDB, Inc.
# chkconfig: 35 90 10
# description: A script to run the MongoDB MMS Automation Agent.
#

### BEGIN INIT INFO
# Provides:          mongodb-mms-automation-agent
# Required-Start:    $local_fs $network
# Required-Stop:     $local_fs $network
# Default-Start:     3 5
# Default-Stop:      0 1 6
# Short-Description: MongoDB MMS Automation Agent
# Description:       MongoDB MMS Automation Agent
### END INIT INFO

APP_NAME="mongodb-mms-automation-agent"
SERVICE_USER="<%= node['mongodb']['user'] %>"
PID_FILE="/var/run/mongodb-mms-automation/mongodb-mms-automation-agent.pid"
CONF_FILE="/etc/mongodb-mms/automation-agent.config"
SUBSYS_LOCK_FILE=/var/lock/subsys/${APP_NAME}

start() {
    if is_running; then
        echo "$APP_NAME is already running"
    else
        echo "$APP_NAME is starting"
        touch $SUBSYS_LOCK_FILE

        rm -f /var/log/mongodb-mms-automation/automation-agent-fatal.log # rm now just in case it's owned by root
#        su -s /bin/bash $SERVICE_USER -c "nohup /opt/mongodb-mms-automation/bin/mongodb-mms-automation-agent -f $CONF_FILE -pidfilepath $PID_FILE > /var/log/mongodb-mms-automation/automation-agent-fatal.log 2>&1 &"
        su -s /bin/bash $SERVICE_USER -c "nohup /usr/local/mongodb-mms-automation/mongodb-mms-automation-agent -f $CONF_FILE -pidfilepath $PID_FILE > /var/log/mongodb-mms-automation/automation-agent-fatal.log 2>&1 &"
    fi
    exit 0
}

stop() {
    if is_running; then
        echo "$APP_NAME is stopping"
        kill `get_pid`
	wait_while_running 30
	
        if is_running; then
            echo "$APP_NAME still not stopped.  Trying kill -9."
	    kill -9 `get_pid`
	    wait_while_running 30
	    
            if is_running; then
                echo "$APP_NAME still not stopped. Giving up."
                exit 1
            fi
        fi
        rm -f $SUBSYS_LOCK_FILE
    else
        echo "$APP_NAME is NOT running"
    fi
}

restart() {
    stop
    start
}

status() {
    if is_running; then
        echo "$APP_NAME is running"
    else
        echo "$APP_NAME is NOT running"
        exit 3
    fi
}

get_pid() {
    if [[ ! -f ${PID_FILE} ]]; then
        echo "x"
    else
        cat ${PID_FILE}
    fi
}

is_running() {
    ps -e -o pid,command | grep "$APP_NAME" | awk '{print $1}' | grep -q "^`get_pid`$"
    return $?
}

wait_while_running() {
    TIMEOUT=$1
    COUNTER=0
    echo -n "Waiting."
    while is_running && [ $COUNTER -lt $TIMEOUT ]; do
        sleep 1
        echo -n .
	let COUNTER=COUNTER+1
    done
    if is_running; then
        echo
    else
        echo " stopped"
    fi
}
    

case "$1" in
    start|stop|restart|status)
        $1
        ;;
    *)
        echo $"Usage: $0 {start|stop|restart|status}"
        exit 2
        ;;
esac
