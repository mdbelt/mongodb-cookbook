#!/bin/bash

#
# (C) Copyright 2013, MongoDB, Inc.
# chkconfig: 35 90 10
# description: A script to run the MongoDB MMS Backup Agent.
#

### BEGIN INIT INFO
# Provides:          mongodb-mms-backup-agent
# Required-Start:    $local_fs $network
# Required-Stop:     $local_fs $network
# Default-Start:     3 5
# Default-Stop:      0 1 6
# Short-Description: MongoDB MMS Backup Agent
# Description:       MongoDB MMS Backup Agent
### END INIT INFO

APP_NAME="mongodb-mms-backup-agent"
#SERVICE_USER="mongodb-mms-agent"
SERVICE_USER="<%= node['mongodb']['user'] %>"
#PID_FILE="/var/run/mongodb-mms-backup-agent.pid"
PID_FILE="/var/run/mongodb-mms-backup/mongodb-mms-backup-agent.pid"
#LOG_FILE="/var/log/mongodb-mms/backup-agent.log"
LOG_FILE="/var/log/mongodb-mms-backup/backup-agent.log"
CONF_FILE="/etc/mongodb-mms/backup-agent.config"

start() {
    if is_running; then
        echo "$APP_NAME is already running"
    else
        echo "$APP_NAME is starting"
#        nohup su -s /bin/bash $SERVICE_USER -c "/usr/bin/mongodb-mms-backup-agent -c $CONF_FILE" >> $LOG_FILE 2>&1 &
        nohup su -s /bin/bash $SERVICE_USER -c "/usr/local/mongodb-mms-backup/mongodb-mms-backup-agent -c $CONF_FILE" >> $LOG_FILE 2>&1 &
        echo $! > $PID_FILE
    fi
}

stop() {
    if is_running; then
        echo "$APP_NAME is stopping"
        kill `get_pid`
        wait_while_running 30

        if is_running; then
            echo "$APP_NAME still not stopped. Trying kill -9"
            kill -9 `get_pid`
            wait_while_running 30

            if is_running; then
                echo "$APP_NAME still not stopped. Giving up."
                exit 1
            fi
        fi
    else
        echo "$APP_NAME is NOT running"
    fi
}

restart() {
    stop
    start
}

status() {
    if is_running; then
        echo "$APP_NAME is running"
    else
        echo "$APP_NAME is NOT running"
        exit 3
    fi
}

get_pid() {
    if [[ ! -f ${PID_FILE} ]]; then
        echo "x"
    else
        cat ${PID_FILE}
    fi
}

is_running() {
    ps -e -o pid,command | grep "$APP_NAME" | awk '{print $1}' | grep -q "^`get_pid`$"
    return $?
}

wait_while_running() {
    TIMEOUT=$1
    COUNTER=0
    echo -n "waiting..."
    while is_running && [ $COUNTER -lt $TIMEOUT ]; do
        sleep 1
        echo -n .
        let COUNTER=COUNTER+1
    done

    if is_running; then
        echo
    else
        echo " stopped"
    fi
}

case "$1" in
    start|stop|restart|status)
        $1
        ;;
    *)
        echo $"Usage: $0 {start|stop|restart|status}"
        exit 2
        ;;
esac
